# The API spec of AGIEF in YAML
swagger: '2.0'
info:
  title: AGI Experimental Framework
  description: An open universal framework for running AGI experiments.
  version: "1.0.5"
# the domain of the service
host: localhost:8080
# array of all schemes that your API supports
schemes:
  - http
# will be prefixed to all paths
basePath: /
produces:
  - application/json
paths:
  /test:
    get:
      summary: test call
      description: |
        this is a test call to test server is running
      tags:
        - Test
      responses:
        200:
          description: OK
  /connect/host/{host}/port/{port}/contextPath/{contextPath}:
    get:
      summary: Connect to server
      description: |
        Send request to connect to server at specified address.
      tags:
        - Connect
      parameters:
        - name: host
          in: path
          description: "ip address of machine running the server"
          required: true
          type: string
        - name: port
          in: path
          description: "port of server"
          required: true
          type: string
        - name: contextPath
          in: path
          description: "the context path of the server"
          required: true
          type: string  
      responses:
        200:
          description: OK
  /control/entity/{entityName}/command/{command}:
    get:
      summary: Send command to a specific entity..
      description: |
        Send a control command signal to an entity. It can consist of Step, Stop, Start, Pause and Resume.
      tags:
        - Control
      parameters:
        - name: entityName
          in: path
          description: "The name of the entity to receive command."
          required: true
          type: string
        - name: command
          in: path
          description: "The command to send."
          required: true
          type: string
      responses:
        200:
          description: Timestamps
          schema:
            type: array
            items:
              $ref: '#/definitions/TStamp'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /control/entity/{entityName}/status/{state}:
    get:
      summary: Get the status for a specific entity.
      description: |
        Get the status of a particular state, Paused, Running and Stopping.
      tags:
        - Control
      parameters:
        - name: entityName
          in: path
          description: "The name of the entity to receive status request."
          required: true
          type: string
        - name: state
          in: path
          description: "The status returns refers to this state."
          required: true
          type: string
      responses:
        200:
          description: status
          schema:
            type: boolean
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  TStamp:
    properties:
      time_id:
        type: number
        description: Timestamp of the current step of the server.
  Error:
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
